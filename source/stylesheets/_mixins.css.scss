@mixin din($font_size: inherit, $font_weight: normal, $font_style: normal, $text_transform: uppercase, $line_height: 1) {
  @if $font_weight == bold {
    font-family: "DINNextLTPro-BoldCondensed", "ff-din-web-condensed", sans-serif;
  } @else if $font_weight == heavy {
    font-family: "DINNextLTPro-HeavyCondensed", "ff-din-web-condensed", sans-serif;
  } @else {
    font-family: "ff-din-web-condensed", sans-serif;
  }
  font-style: $font_style;
  font-size: $font_size;
  text-transform: $text_transform;
  line-height: $line-height;
}

@mixin sans-serif($font_size: inherit, $font_weight: 300, $font_style: normal, $line_height: 1) {
  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", sans-serif;
  font-weight: $font_weight;
  font-style: $font_style;
  font-size: $font_size;
  line-height: $line-height;
}

@mixin sprite($name, $sprites, $sprites2x) {
  background-image: $sprites;
  background-position: sprite-position($sprites, $name);
  background-repeat: no-repeat;
  @media
  only screen and (-webkit-min-device-pixel-ratio: '1.3'),
  only screen and (min-resolution: '124.8dpi') {
    $pos: sprite-position($sprites2x, $name);
    background-image: $sprites2x;
    background-position: nth($pos, 1) nth($pos, 2)/2;
    @include background-size(ceil(image-width(sprite-path($sprites2x)) / 2), auto);
  }
}

@mixin tilt($angle, $y_offset, $x_offset, $margin) {
  .csstransforms & {
    @include transform(rotate($angle));
    @include transform-origin($y_offset, $x_offset);
    -webkit-font-smoothing: antialiased;
    margin-top: $margin;
  } 
}

@mixin link-sprite($sprite, $sprite-active, $width, $height) {
  position: relative;

  &:before {
    content: '';
    width: $width;
    height: $height;
    position: absolute;
    top: 50%;
    left: 50%;
    margin-left: - $width / 2;
    margin-top: - $height / 2;
  }

  @if $sprite == $sprite-active {
    &:before {
      @include sprite($sprite, $sprites, $sprites_2x);
    }
  } @else {
    &:link:before, &:visited:before {
      @include sprite($sprite, $sprites, $sprites_2x);
    }
    &:hover:before, &:active:before {
      @include sprite($sprite-active, $sprites, $sprites_2x);
    }
  } 

  &:active:before {
    margin-top: 1 - ($height / 2);
  }
}

@mixin vertical-center($child) {
  display: table;

  #{$child} {
    display: table-cell;
    vertical-align: middle;
    padding-top: 0.15em;
  }
}

@mixin round-box($radius) {
  width:$radius * 2;
  height:$radius * 2;
  border-radius:$radius;
}

@mixin slide-in($delay) {

  @media (min-width: $break_small) {
    .current .tier_1 &, .current .tier_3 & {
      -webkit-animation: slide-left  $page_speed $delay ease both;
      -moz-animation: slide-left $page_speed $delay ease both;
      animation: slide-left $page_speed $delay ease both;
    }

    .current .tier_2 & {
      -webkit-animation: slide-right  $page_speed $delay ease both;
      -moz-animation: slide-right $page_speed $delay ease both;
      animation: slide-right $page_speed $delay ease both;
    }
  }
}

@-webkit-keyframes slide-right {
  from { -webkit-transform: translateX(-10%); opacity: 0; }
}
@-moz-keyframes slide-right {
  from { -moz-transform: translateX(-10%); opacity: 0; }
}
@keyframes slide-right {
  from { transform: translateX(-10%); opacity: 0; }
}

@-webkit-keyframes slide-left {
  from { -webkit-transform: translateX(10%); opacity: 0; }
}
@-moz-keyframes slide-left {
  from { -moz-transform: translateX(10%); opacity: 0; }
}
@keyframes slide-left {
  from { transform: translateX(10%); opacity: 0; }
}